<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.example.controller" />
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/content/"
          p:suffix=".jsp" />
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
          p:basename="message" />
    <!--<mvc:resources mapping="" location=""-->
    <mvc:default-servlet-handler />
    <mvc:annotation-driven />
    <!-- 国际化操作拦截器 -->
    <mvc:interceptors>
        <!-- 国际化操作拦截器，如果基于（Session和Cookie）则必须配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors>
    <!-- AcceptHeaederLocaleResolver配置，因为AcceptHeaederLocaleResolver是默认的语言区域解析器，所以不解析也可以 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />
</beans>
